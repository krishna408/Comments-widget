{"ast":null,"code":"import _toConsumableArray from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/krishna/Desktop/react/comments-widget/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/krishna/Desktop/react/comments-widget/components/CommentsWidget.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* components/CommentsWidget.js */\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Comment from './Comment';\nvar SAD_EMOJI = [55357, 56864];\nvar HAPPY_EMOJI = [55357, 56832];\nvar NEUTRAL_EMOJI = [55357, 56848];\n\nvar CommentsWidget = /*#__PURE__*/function (_Component) {\n  _inherits(CommentsWidget, _Component);\n\n  var _super = _createSuper(CommentsWidget);\n\n  function CommentsWidget() {\n    var _this;\n\n    _classCallCheck(this, CommentsWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      comments: [],\n      person: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (evt) {\n      var value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        var person = _this.state.person;\n        var comment = {\n          person: person,\n          comment: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n\n        _this.setState({\n          person: null\n        }, function () {\n          return axios.post('/comment', comment);\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CommentsWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('post-comments');\n      this.channel.bind('new-comment', function (_ref) {\n        var _ref$comment = _ref.comment,\n            comment = _ref$comment === void 0 ? null : _ref$comment;\n        var comments = _this2.state.comments;\n        comment && comments.push(comment);\n\n        _this2.setState({\n          comments: comments\n        });\n      });\n      this.pusher.connection.bind('connected', function () {\n        axios.post('/comments').then(function (response) {\n          var comments = response.data.comments;\n\n          _this2.setState({\n            comments: comments\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var people = ['Munna bhaiya', 'John', 'Steve', 'Anna', 'tripathi', 'krishna', 'guddu', 'hasina', 'Rose', 'Bob', 'guddu', 'lallu', 'Bridget', 'Sebastian', 'Richard'];\n      var nameBadgeStyles = {\n        fontSize: '0.8rem',\n        height: 40,\n        borderRadius: 20,\n        cursor: 'pointer'\n      };\n\n      var choosePersona = function choosePersona(person) {\n        return function (evt) {\n          return _this3.setState({\n            person: person\n          });\n        };\n      };\n\n      var randomPeople = function randomPeople(count) {\n        var selected = [];\n        var i = 0;\n        count = Math.max(0, Math.min(count, people.length));\n\n        while (i < count) {\n          var index = Math.floor(Math.random() * people.length);\n          if (selected.includes(index)) continue;\n          ++i && selected.push(index);\n        }\n\n        return selected.map(function (index) {\n          var person = people[index];\n          var className = 'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: className,\n            style: nameBadgeStyles,\n            title: person,\n            onClick: choosePersona(person),\n            children: person\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 18\n          }, _this3);\n        });\n      }; // return statement is here ....\n\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between\",\n          style: {\n            height: 90\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-dark mb-0 mx-4\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"class\": \"badge badge-pill badge-primary mx-4\",\n            style: {\n              fontSize: '1.2rem'\n            },\n            children: this.state.comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\",\n          style: {\n            height: 'calc(100% - 250px)',\n            overflowY: 'scroll'\n          },\n          children: this.state.comments.map(function (comment, index) {\n            var mood = comment.sentiment > 0 ? HAPPY_EMOJI : comment.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI;\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-start align-items-center w-100 font-weight-bold text-dark mt-4 pb-1 px-1\",\n                style: {\n                  fontSize: '0.9rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"d-inline-block pr-1\",\n                  style: {\n                    fontSize: '1.25rem'\n                  },\n                  children: String.fromCodePoint.apply(String, _toConsumableArray(mood))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 17\n                }, _this3), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"align-middle\",\n                  style: {\n                    lineHeight: '1.25rem'\n                  },\n                  children: comment.person || 'Anonymous'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, _this3)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, _this3), /*#__PURE__*/_jsxDEV(Comment, {\n                text: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 15\n              }, _this3)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, _this3);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-top border-gray w-100 px-4 d-flex flex-wrap align-items-center align-content-center bg-light\",\n          style: {\n            height: 160\n          },\n          children: [!this.state.person && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dark py-2\",\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 500\n            },\n            children: \"Choose your Persona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 py-2 pb-3 d-flex justify-content-start\",\n            children: this.state.person ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-block d-flex align-items-center text-center text-white bg-primary font-weight-bold py-2 px-4 mr-3\",\n              style: nameBadgeStyles,\n              title: this.state.person,\n              children: this.state.person\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 12\n            }, this) : randomPeople(4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 4\n          }, this), this.state.person && /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control px-3 py-2\",\n            onKeyUp: this.handleKeyUp,\n            placeholder: \"Make a comment\",\n            style: {\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return CommentsWidget;\n}(Component);\n\n;\nexport default CommentsWidget;","map":{"version":3,"sources":["/home/krishna/Desktop/react/comments-widget/components/CommentsWidget.js"],"names":["React","Component","Fragment","axios","Pusher","Comment","SAD_EMOJI","HAPPY_EMOJI","NEUTRAL_EMOJI","CommentsWidget","comments","person","evt","value","target","keyCode","shiftKey","state","comment","timestamp","Date","setState","post","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","push","connection","then","response","data","disconnect","people","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","randomPeople","count","selected","i","Math","max","min","length","index","floor","random","includes","map","className","overflowY","mood","sentiment","String","fromCodePoint","lineHeight","fontWeight","handleKeyUp","resize"],"mappings":"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","sourcesContent":["/* components/CommentsWidget.js */\n\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Comment from './Comment';\n\n    const SAD_EMOJI = [55357, 56864];\n    const HAPPY_EMOJI = [55357, 56832];\n    const NEUTRAL_EMOJI = [55357, 56848];\n\nclass CommentsWidget extends Component {\n\n  state = { comments: [], person: null }\n\n  handleKeyUp = evt => {\n    const value = evt.target.value;\n\n    if (evt.keyCode === 13 && !evt.shiftKey) {\n      const { person } = this.state;\n      const comment = { person, comment: value, timestamp: +new Date };\n\n      evt.target.value = '';\n      this.setState({ person: null }, () => axios.post('/comment', comment));\n    }\n  }\n\n  componentDidMount() {\n\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n\n    this.channel = this.pusher.subscribe('post-comments');\n\n    this.channel.bind('new-comment', ({ comment = null }) => {\n      const { comments } = this.state;\n      comment && comments.push(comment);\n      this.setState({ comments });\n    });\n\n    this.pusher.connection.bind('connected', () => {\n      axios.post('/comments')\n        .then(response => {\n          const comments = response.data.comments;\n          this.setState({ comments });\n        });\n    });\n\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n  render() {\n    const people = [ 'Munna bhaiya', 'John', 'Steve', 'Anna', 'tripathi', 'krishna', 'guddu', 'hasina', 'Rose', 'Bob', 'guddu','lallu', 'Bridget', 'Sebastian', 'Richard' ];\n\n      const nameBadgeStyles = {\n        fontSize: '0.8rem',\n        height: 40,\n        borderRadius: 20,\n        cursor: 'pointer'\n      };\n\n      const choosePersona = person => evt => this.setState({ person });\n\n      const randomPeople = count => {\n        const selected = [];\n        let i = 0;\n\n        count = Math.max(0, Math.min(count, people.length));\n\n        while (i < count) {\n          const index = Math.floor(Math.random() * people.length);\n          if (selected.includes(index)) continue;\n          ++i && selected.push(index);\n        }\n\n        return selected.map(index => {\n          const person = people[index];\n          const className = 'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n\n          return <span key={index} className={className} style={nameBadgeStyles} title={person} onClick={choosePersona(person)}>{person}</span>\n        });\n      };\n // return statement is here ....\n return <Fragment>\n\n <div className=\"border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between\" style={{ height: 90 }}>\n   <h2 className=\"text-dark mb-0 mx-4\">Comments</h2>\n   <span class=\"badge badge-pill badge-primary mx-4\" style={{ fontSize: '1.2rem' }}>{ this.state.comments.length }</span>\n </div>\n\n <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 250px)', overflowY: 'scroll' }}>\n      {\n        this.state.comments.map((comment, index) => {\n\n          const mood = comment.sentiment > 0 ? HAPPY_EMOJI : (comment.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\n\n          return (\n            <Fragment key={index}>\n\n              <div className={`d-flex justify-content-start align-items-center w-100 font-weight-bold text-dark mt-4 pb-1 px-1`} style={{ fontSize: '0.9rem' }}>\n                <span className=\"d-inline-block pr-1\" style={{ fontSize: '1.25rem' }}>{String.fromCodePoint(...mood)}</span>\n                <span className=\"align-middle\" style={{ lineHeight: '1.25rem' }}>{comment.person || 'Anonymous'}</span>\n              </div>\n\n              <Comment text={comment.comment} />\n\n            </Fragment>\n          );\n\n        })\n      }\n    </div>\n\n\n <div className=\"border-top border-gray w-100 px-4 d-flex flex-wrap align-items-center align-content-center bg-light\" style={{ height: 160 }}>\n\n   {\n     !this.state.person &&\n     <span className=\"text-dark py-2\" style={{ fontSize: '1.5rem', fontWeight: 500 }}>Choose your Persona</span>\n   }\n\n   <div className=\"w-100 py-2 pb-3 d-flex justify-content-start\">\n     {\n       this.state.person\n         ? <span className=\"d-block d-flex align-items-center text-center text-white bg-primary font-weight-bold py-2 px-4 mr-3\" style={nameBadgeStyles} title={this.state.person}>{this.state.person}</span>\n         : randomPeople(4)\n     }\n   </div>\n\n   {\n     this.state.person &&\n     <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Make a comment\" style={{ resize: 'none' }}></textarea>\n   }\n\n </div>\n\n</Fragment>\n\n  }\n};\n\nexport default CommentsWidget;"]},"metadata":{},"sourceType":"module"}